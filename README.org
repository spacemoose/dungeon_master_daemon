* Dungeon Master's Daemon

A tool to help tabletop dungeon masters with managing combat.

   - Create and manage encounters.
   - Manually enter the player's initiative roles, and let your daemon roll initiative for creatures and npcs.
   - Manage create HP and eventually effects.

Basicaly, it's what I wish D&D Beyond would deliver with it's encounter builder.

* Development
** Setup the virtual env
You can check out all the requirements in ~requirements.txt~.  Big love to borntyping and calebj for dice.

To create the virtual environment, run:
#+begin_src bash
   pip install -r requirements.txt
#+end_src

* Tasks
** DONE DB stuff
CLOSED: [2023-03-20 Mon 09:45]


*** DONE [100%] test_creature.
CLOSED: [2023-03-20 Mon 06:25]
      - [X] I can create a kobold
      - [X] I can view a kobold
      - [X] I can add the two actions to the kobold.

*** DONE test_instances
CLOSED: [2023-03-20 Mon 06:25]
- [X] kinda gotta decide on a basic interface for creating and adding instances.
- [X] on construction, I want to roll the hit points, and initiative.  Options can come later.

*** DONE TEST ENCOUNTER CREATIONS
CLOSED: [2023-03-20 Mon 06:25]
    - [X]  4 kobolds

      Tests are good when I can verify the contents of the created encounters.

  *** TODO Creation in CRUD using pdyantic models
** DONE CRUD
CLOSED: [2023-03-20 Mon 09:44]
   - [X] Create creature tested.
*** DONE TEST ENCOUNTERS:
CLOSED: [2023-03-20 Mon 09:44]
    - [X] 6 kobolds and 2 winged kobolds
    - [X] 3 winged kobolds
    - [X] 5 winged kobolds
    - [X] 2 winged kobolds and 1 guard drake (appendix D)
    - [X] 2 ambush drakes (appendix D)

** DONE Text importing from DADB
CLOSED: [2023-03-20 Mon 06:23]

*** Make this work.

** User interface
*** DONE I can view a list of encounters
CLOSED: [2023-03-20 Mon 10:25]
*** TODO I can click on an encounter, and view its details
*** TODO Interface for adding a creature
       - [ ] Start with a stupid button to call up the "add creature" interface.
       - [ ] I can create a creature.
       - [ ] When typing in creature name, fuzzy matching prevents me from duplicating an entry -- go to edit instead of create.
       - [ ] I can select an existing attack by name.
       - [ ] I can create an existing attack when name does not exist.
       - [ ] I can fuzzy-match by partial name, and either select or create new appropriately.
       - [ ] I'll need an add button, and a cancel button.

*** TODO  I can create an encounter
       - [ ] Add a button "Add/edit encounter"
       - [ ] Fuzzy matching on the name.
       - [ ] Find a match, open the edit encounter screen
       - [ ] No match, new encounter screen.

*** TODO  Add creature to encounter
       - [ ] Add a button to add a creature.
       - [ ] Fuzzy matching, create-instance dialog, appropriate behavior.
       - [ ] Auto-roll the HP!
       - [ ] On close you see the update encounter.
       - [ ] Adding a player, click on the "is-pc" tag, so you will be prompted for player initiatives.
       - [ ] Add a "run the encounter button.
       - [ ] On  "run the encounter", prompt for player initiatiaties, roll creature initiatives, and sort the entires.
       - [ ] We'll need a "next button" that iterates over all the participants, and shows the necessary details to run the encounter.
       - [ ] We'll need to be able to switch between group and participant view, and have meaningful information in the group view.
       - [ ] On the active participant, we'll want a little "HP" button that lets us adjust the HP.

*** TODO Status.
        - unconcious.
        - poisoned
        - burning
        - charmed
          The usual DB stuff.

*** TODO I can sync across devices.
        This is a hairy one.  I should talk to Alvin about how to do this.  I'd like to host  a db on AWS and sync regularly.  Alvin can help with AWS setup,  and maybe syncing strategy.

*** TODO I can copy paste text from D&DB
       And get a creature entry out of it!




We'll need screens for the following:

** TODO Persist across sessions
So far I'm just using in-memory db for testing.  Add support for real persisence.
* Notes

Okay, I now have workign db language for the stuff I need to store.  The next step is either to connect this
This looks helpful https://towardsdatascience.com/fastapi-cloud-database-loading-with-python-1f531f1d438a

* Fantasies
  - sharing data amongst devices
  - Include a picture of their creature, be able to fullscreen it to show to players.
  - statuses with explanations and expirations.
